// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum User_Role {
  traveller
  travel_supplier
  hotel_supplier
  restaurant_supplier
  transportation_supplier
  admin
}

enum User_Status {
  active
  inactive
}

model User {
  id_user       Int         @id @default(autoincrement()) @db.UnsignedInt
  username      String      @unique @db.VarChar(100)
  password      String      @db.Char(128)
  role          User_Role   @default(traveller)
  image         String      @default("https://drive.google.com/file/d/1FLEG8MIbWkBQu72L4x-MB1--iSj-3RMu/view?usp=drive_link")
  name          String      @db.VarChar(100)
  email         String      @unique @db.VarChar(100)
  gender        Boolean
  date_of_birth DateTime    @db.Date()
  phone_number  String      @db.Char(10)
  address       String      @db.Text
  create_at     DateTime    @default(now())
  point         Int         @default(0) @db.UnsignedMediumInt
  status        User_Status @default(active)
  salt          String      @db.Char(32)

  info_supplier  Info_Supplier[]
  product        Product[]
  discount       Discount[]
  cart           Cart[]
  bill_traveller Bill[]
  bill_supplier  Bill[]          @relation("supplier")
  rate           Rate[]
  contact        Contact[]
  info_contact   Info_Contact[]
}

model Info_Supplier {
  id_info_supplier Int    @id @default(autoincrement()) @db.UnsignedMediumInt
  id_user          Int    @db.UnsignedInt
  user             User   @relation(fields: [id_user], references: [id_user])
  tax_id_number    String @unique @db.VarChar(13)
  fee              Int    @default(10) @db.UnsignedSmallInt
}

model City {
  id_city Int    @id @default(autoincrement()) @db.UnsignedMediumInt
  name    String @unique

  location Location[]
}

model Location {
  id_location  Int    @id @default(autoincrement()) @db.UnsignedInt
  system_name  String @unique
  display_name String
  id_city      Int    @db.UnsignedMediumInt
  city         City   @relation(fields: [id_city], references: [id_city])

  product Product[]
}

enum Product_Status {
  active
  warning
  inactive
}

model Product {
  id_product     Int            @id @default(autoincrement()) @db.UnsignedInt
  name           String
  id_user        Int            @db.UnsignedInt
  user           User           @relation(fields: [id_user], references: [id_user])
  location_map   String
  time           Float          @db.Float
  quantity       Int            @db.UnsignedSmallInt
  age            Int            @db.UnsignedSmallInt
  count_complete Int            @default(0) @db.UnsignedInt
  description    String         @db.LongText
  count_rate     Int            @default(0) @db.UnsignedInt
  avg_rate       Int            @default(0) @db.UnsignedInt
  id_location    Int            @db.UnsignedInt
  location       Location       @relation(fields: [id_location], references: [id_location])
  image          String         @default("https://drive.google.com/file/d/14mT0WkfzPR1mJHfI0C6k4Um3WlEJSBDP/view?usp=sharing")
  city           String
  status         Product_Status @default(active)

  schedule_product Schedule_Product[]
  discount         Discount[]
  rate             Rate[]
}

enum Schedule_Product_Status {
  active
  full
  inactive
  cancel
}

model Schedule_Product {
  id_schedule_product Int                     @id @default(autoincrement()) @db.UnsignedInt
  id_product          Int                     @db.UnsignedInt
  product             Product                 @relation(fields: [id_product], references: [id_product])
  start_time          DateTime
  end_time            DateTime
  price               Int                     @db.UnsignedInt
  booked              Int                     @default(0) @db.UnsignedSmallInt
  status              Schedule_Product_Status @default(active)

  cart      Cart[]
  info_bill Info_Bill[]
}

enum Discount_Status {
  active
  full
  cancel
}

model Discount {
  id_discount Int             @id @default(autoincrement()) @db.UnsignedInt
  id_user     Int             @db.UnsignedInt
  user        User            @relation(fields: [id_user], references: [id_user])
  id_product  Int             @db.UnsignedInt
  product     Product         @relation(fields: [id_product], references: [id_product])
  name        String
  description String          @db.LongText
  start_time  DateTime
  end_time    DateTime
  value       Int             @db.UnsignedSmallInt
  quantity    Int             @db.UnsignedSmallInt
  point       Int             @default(0) @db.UnsignedMediumInt
  applited    Int             @default(0) @db.UnsignedSmallInt
  status      Discount_Status @default(active)

  bill Bill[]
}

model Cart {
  id_cart             Int              @id @default(autoincrement()) @db.UnsignedInt
  id_user             Int              @db.UnsignedInt
  user                User             @relation(fields: [id_user], references: [id_user])
  id_schedule_product Int              @db.UnsignedInt
  schedule_poruduct   Schedule_Product @relation(fields: [id_schedule_product], references: [id_schedule_product])
  product_name        String
  city_name           String
}

enum Bill_Status {
  done
  paided
  pending
  cancel
}

model Bill {
  id_bill        Int         @id @default(autoincrement()) @db.UnsignedInt
  id_user        Int         @db.UnsignedInt
  user           User        @relation(fields: [id_user], references: [id_user])
  id_supplier    Int         @db.UnsignedInt
  supplier       User        @relation(name: "supplier", fields: [id_supplier], references: [id_user])
  time           DateTime    @default(now())
  id_discount    Int         @db.UnsignedInt
  discount       Discount    @relation(fields: [id_discount], references: [id_discount])
  discount_value Int
  quantity       Int         @db.UnsignedSmallInt
  status         Bill_Status @default(pending)

  info_bill Info_Bill[]
}

model Info_Bill {
  id_info_bill        Int              @id @default(autoincrement()) @db.UnsignedInt
  id_bill             Int              @db.UnsignedInt
  bill                Bill             @relation(fields: [id_bill], references: [id_bill])
  id_schedule_product Int              @db.UnsignedInt
  schedule_product    Schedule_Product @relation(fields: [id_schedule_product], references: [id_schedule_product])
  product_name        String
  city_name           String
}

enum Rate_Status {
  presently
  hidden
}

model Rate {
  id_rate    Int         @id @default(autoincrement()) @db.UnsignedInt
  id_product Int         @db.UnsignedInt
  product    Product     @relation(fields: [id_product], references: [id_product])
  id_user    Int         @db.UnsignedInt
  user       User        @relation(fields: [id_user], references: [id_user])
  comment    String      @db.Text
  star       Int         @db.UnsignedSmallInt
  status     Rate_Status @default(presently)
}

enum Contact_Category {
  report
  chat
}

model Contact {
  id_contact   Int              @id @default(autoincrement()) @db.UnsignedInt
  id_user_call Int              @db.UnsignedInt
  user_call    User             @relation(fields: [id_user_call], references: [id_user], map: "user_call")
  category     Contact_Category @default(chat)

  id_info_contact Info_Contact[]
}

model Info_Contact {
  id_info_contact Int      @id @default(autoincrement()) @db.UnsignedInt
  id_contact      Int      @db.UnsignedInt
  contact         Contact  @relation(fields: [id_contact], references: [id_contact])
  id_user_listen  Int      @db.UnsignedInt
  user_listen     User     @relation(fields: [id_user_listen], references: [id_user])
  message         String   @db.Text
  time            DateTime @default(now())
}
